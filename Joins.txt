JOINS
=====
Joins ar used to retrieve the data from multiple tables simultaneously.

Types of Joins
==============
1. Cartesian Joins or Cross Join (deprecated)
2. Inner Joins
3. Outer Joins 
  -> LEFT Outer Join
  -> RIGHT Outer Join
  -> FULL Outer Join 
4. Self Joins
5. Natural Joins (deprecated)

CARTESIAN JOINS
===============
Here, the records of table-1 will be merged with records of table-2.

Syntax:
SELECT column-name
FROM table-1 CROSS JOIN table-2;

Whenever we go for cross joins, 
-> Number of rows retreived : t1*t2
-> Number of columns retreived : t1+t2

Drawback
========
> We get more number of error records or invalid records when compared to valid records.

--------------------------------------------------------------------------
INNER JOINS
===========
INNER JOINS are used to obtain only the matched records.

Syntax:
-------
SELECT col-name
FROM table-1 INNER JOIN table-2 
ON table-1.col-name=table-2.col-name;

Note :
> The condition which we write to connect the tables is known as Join condition.
> We use ON keyword to write the JOIN condition.

==========================================================================
180. WAQTD THE EMP FNAME, AND HIS DEPT NAME

SELECT FNAME,DNAME
FROM EMP INNER JOIN DEPT
ON EMP.DNO=DEPT.DNO;

181. WAQTD THE EMP FNAME, DEPT NAME, SAL, JOB.

SELECT FNAME,DNAME,SAL,JOB
FROM EMP INNER JOIN DEPT
ON EMP.DNO=DEPT.DNO;

182. WAQTD THE CUSTOMER FIRST_NAME AND HIS LOCATION.

SELECT FIRST_NAME,LOCATION
FROM CUSTOMER INNER JOIN LOCATION
ON CUSTOMER.LID=LOCATION.LID;

183. WAQTD THE DEPT NAME AND ITS LOCATION, CITY AND STATE.

SELECT DNAME,LOCATION,CITY,STATE
FROM DEPT INNER JOIN LOCATION
ON DEPT.LID=LOCATION.LID;

184. WAQTD THE EMP FNAME, DEPT NAME IF THE EMP IS WORKING IN IT DEPT.

SELECT FNAME,DNAME
FROM EMP INNER JOIN DEPT
ON EMP.DNO=DEPT.DNO
WHERE DNAME='IT';

185. WAQTD THE CUSTOMER FULLNAME AND HIS LOCATION NAME IN THE BELOW FORMAT.

FULLNAME             ADDRESS
----------------------------------------
AKASH PATIL      Vijayanagar, Bangalore

SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) FULLNAME,
CONCAT(LOCATION,', ',CITY) ADDRESS
FROM CUSTOMER INNER JOIN LOCATION
ON CUSTOMER.LID=LOCATION.LID;

186. WAQTD THE EMP FNAME, DEPT NAME IF THE EMP FNAME HAS EXACTLY 2 A IN IT.

SELECT FNAME, DNAME
FROM EMP INNER JOIN DEPT
ON EMP.DNO=DEPT.DNO
WHERE LENGTH(FNAME)-LENGTH(REPLACE(LOWER(FNAME),'a',''))=2;

187. WAQTD THE EMP FNAME, DEPT NAME, DNO.

SELECT FNAME,DNAME,EMP.DNO
FROM EMP INNER JOIN DEPT
ON EMP.DNO=DEPT.DNO;

SELECT E1.FNAME,D1.DNAME,E1.DNO
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO;

188. WAQTD THE EMP FNAME, DEPT NAME IF THE EMP IS WORKING IN SALES OR IT DEPT.

SELECT E1.FNAME,D1.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO
WHERE D1.DNAME IN ('SALES','IT');

189. WAQTD THE ORDER ID AND CUSTOMER NAME WHO HAVE ORDERED THE PRODUCT SO FAR.

SELECT ORDER_ID,FIRST_NAME
FROM ORDERS O1 INNER JOIN CUSTOMER C1
ON O1.CID=C1.CID;

190. WAQTD THE ORDER ID AND PRODUCT NAME IF THE PRODUCT HAS BEEN ORDERED.

SELECT O1.ORDER_ID,P1.PNAME
FROM PRODUCT P1 INNER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID;

191. WAQTD THE EMP FNAME, CUSTOMER NAME, CID IF THE EMP IS ALSO A CUSTOMER IN THE COMPANY.

SELECT E1.FNAME,C1.FIRST_NAME,C1.CID
FROM CUSTOMER C1 INNER JOIN EMP E1
ON C1.CID=E1.CID;

192. WAQTD THE EMP FNAME, LNAME, DEPT NAME AND DEPT LOCATION.

SELECT E1.FNAME,E1.LNAME,D1.DNAME,L1.LOCATION
FROM EMP E1 INNER JOIN DEPT D1 INNER JOIN LOCATION L1
ON E1.DNO=D1.DNO AND D1.LID=L1.LID;

or

SELECT E1.FNAME,E1.LNAME,D1.DNAME,L1.LOCATION
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1
ON D1.LID=L1.LID;

193. WAQTD THE ORDER ID, CUSTOMER FNAME, PNAME HE HAS ORDERED.

SELECT O1.ORDER_ID,C1.FIRST_NAME,P1.PNAME
FROM ORDERS O1 INNER JOIN CUSTOMER C1
ON O1.CID=C1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID; 

194. WAQTD THE EMP FNAME,LNAME, DEPT NAME, LOCATION, CITY, STATE IN THE BELOW FORMAT.

EMP_NAME        DEPT_LOCATION 
----------      --------------
SIDDARTH.P      IT - Koramangala, Bangalore, Karnataka

SELECT CONCAT(E1.FNAME,'.',SUBSTR(E1.LNAME,1,1)) EMP_NAME,
CONCAT(D1.DNAME,' - ',L1.LOCATION,', ',L1.CITY,', ',L1.STATE)
DEPT_LOCATION
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1
ON D1.LID=L1.LID;

195. WAQTD THE EMP FNAME, DEPT NAME, LOCATION IF THE EMP FNAME STARTS WITH VOWELS.

SELECT E1.FNAME,D1.DNAME,L1.LOCATION
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1
ON D1.LID=L1.LID
WHERE SUBSTR(FNAME,1,1)IN('A','E','I','O','U');

196. WAQTD THE CUSTOMER FULL NAME, ORDER ID AND THE PRODUCT NAME IF THE CUSTOMER HAS ORDERED HEADPHONES.

SELECT CONCAT(C1.FIRST_NAME,' ',C1.LAST_NAME) FULLNAME, O1.ORDER_ID, P1.PNAME
FROM CUSTOMER C1 INNER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
WHERE P1.PNAME='HEADPHONES';

197. WAQTD THE OUTPUT AS BELOW.

ORDER_ID   CUSTOMER_NAME          ADDRESS        PNAME
---------------------------------------------------------------
1111          Kiran.K     Vijayanagar, Bangalore     SMARTPHONE

BILL    ORDER-DATE       DELIVERY-DATE   DELIVERY_BY
--------------------------------------------------------------
29999   Sep 10,2025      Sept 11,2025     Jahnavi

SELECT O1.ORDER_ID,
CONCAT(C1.FIRST_NAME,'.',SUBSTR(C1.LAST_NAME,1,1)) CUSTOMER_NAME,
CONCAT(L1.LOCATION,', ',L1.CITY) ADDRESS,
P1.PNAME,
P1.PRICE BILL,
DATE_FORMAT(O1.ORDER_DATE,'%b %d,%Y') ORDER_DATE,
DATE_FORMAT(O1.DELIVERY_DATE,'%b %d,%Y') DELIVER_DATE,
E1.FNAME DELIVERED_BY

FROM ORDERS O1 INNER JOIN CUSTOMER C1
ON O1.CID=C1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID INNER JOIN LOCATION L1
ON C1.LID=L1.LID INNER JOIN EMP E1
ON O1.EID=E1.EID;

198. WAQTD THE DEPT NAME, LOCATION IF THE DEPT IS LOCATED IN KARNATAKA.

SELECT D1.DNAME,L1.LOCATION
FROM DEPT D1 INNER JOIN LOCATION L1
ON D1.LID=L1.LID
WHERE L1.STATE='KARNATAKA';

199. WAQTD THE CUSTOMER FULLNAME, LOCATION AND PNAME IF THE CUSTOMER HAS ORDERED THE PRODUCT WHICH CONSIST OF EVEN PRODUCT_ID.

SELECT CONCAT(C1.FIRST_NAME,C1.LAST_NAME) FULLNAME,
L1.LOCATION,P1.PNAME
FROM CUSTOMER C1 INNER JOIN LOCATION L1
ON C1.LID=L1.LID INNER JOIN ORDERS O1 
ON O1.CID=C1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
WHERE MOD(P1.PRODUCT_ID,2)=0;

200. WAQTD THE EMP FULLNAME, DEPT NAME IF THE EMP IS A MALE.

SELECT CONCAT(E1.FNAME,' ',E1.LNAME) FULLNAME,D1.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO
WHERE E1.GENDER='M';

==============================================================
SELF JOIN
=========
> Self Joins are used to obtain the matched records from two same tables.
> Self Joins works same as Inner join.
> In case of self join, table-level aliasing is mandatory.

Syntax:
------
SELECT column-name
FROM table T1 JOIN table T2
ON T1.col-name=T2.col-name;

===============================================================
201. WAQTD THE EMP FNAME AND HIS MANAGER FNAME.

SELECT E1.FNAME emp_name,E2.FNAME manager_name
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID;

202. WAQTD THE EMP FNAME AND HIS MANAGER NAME IF THE EMP IS REPORTING TO HEMA.
Hint : Manager is Hema.

SELECT E1.FNAME,E2.FNAME
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID
WHERE E2.FNAME='HEMA';

203. WAQTD THE EMP FNAME, DOB, MANAGER FNAME, HIS DOB IF THE EMP IS ELDER THAN HIS/HER MANAGER.

SELECT E1.FNAME,E1.DOB,E2.FNAME,E2.DOB
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID
WHERE E1.DOB<E2.DOB;

204. WAQTD THE EMP FNAME, HIS DEPT NAME ALONG WITH MANAGER FNAME.

SELECT E1.FNAME,D1.DNAME,E2.FNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO JOIN EMP E2
ON E1.MGR=E2.EID;

205. WAQTD THE EMP FNAME, HIS DEPT NAME, HIS MANAGER FNAME AND MANAGER'S DEPT NAME.

SELECT E1.FNAME, D1.DNAME, E2.FNAME, D2.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO JOIN EMP E2
ON E1.MGR=E2.EID INNER JOIN DEPT D2
ON E2.DNO=D2.DNO;

or

SELECT E1.FNAME, D1.DNAME, E2.FNAME, D2.DNAME
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN DEPT D2
ON E2.DNO=D2.DNO;

206. WAQTD THE EMP FNAME, MANAGER FNAME AND MANAGER'S MANAGER FNAME.

SELECT E1.FNAME,E2.FNAME,E3.FNAME
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID JOIN EMP E3
ON E2.MGR=E3.EID;

207. WAQTD THE CUSTOMER FNAME, TOTAL AMOUNT SPENT BY EACH CUSTOMER OVERALL.

SELECT C1.FIRST_NAME,SUM(P1.PRICE) TOTAL_AMOUNT
FROM CUSTOMER C1 INNER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY O1.CID,C1.FIRST_NAME;

208. WAQTD THE NUMBER OF ORDERS ORDERED BY EACH CUSTOMER.

SELECT COUNT(*),C1.FIRST_NAME
FROM ORDERS O1 INNER JOIN CUSTOMER C1 
ON O1.CID=C1.CID
GROUP BY O1.CID,C1.FIRST_NAME;

209. WAQTD THE PRDT NAME AND NUMBER OF UNITS GOT SOLD.

SELECT P1.PNAME,COUNT(*)
FROM ORDERS O1 INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY O1.PRODUCT_ID,P1.PNAME;

210. WAQTD THE FNAME, NUMBER OF ORDERS DELIVERED BY EACH EMP.

SELECT COUNT(*),E1.FNAME
FROM ORDERS O1 INNER JOIN EMP E1
ON O1.EID=E1.EID
GROUP BY O1.EID,E1.FNAME;

211. WAQTD THE NUMBER OF CUSTOMERS LIVE IN EACH STATE.

SELECT L1.STATE,COUNT(*)
FROM CUSTOMER C1 INNER JOIN LOCATION L1
ON C1.LID=L1.LID
GROUP BY L1.STATE;

212. WAQTD THE TOP 3 CUSTOMER WHO HAVE SPENT THE MOST OVERALL.

SELECT SUM(P1.PRICE) TOTAL, C1.FIRST_NAME
FROM PRODUCT P1 INNER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID INNER JOIN CUSTOMER C1
ON O1.CID=C1.CID
GROUP BY O1.CID,C1.FIRST_NAME
ORDER BY TOTAL DESC
LIMIT 3;

213. WAQTD THE TOP 3 MOST SELLING PRODUCT BASED ON PRICE GENERATED.

SELECT SUM(P1.PRICE) TOTAL,P1.PNAME
FROM PRODUCT P1 INNER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID
GROUP BY O1.PRODUCT_ID,P1.PNAME
ORDER BY TOTAL DESC
LIMIT 3;

214. WAQTD THE NUMBER OF REVENUE GENERATED EVERY MONTH.
[Use Delivery-Date]

SELECT DATE_FORMAT(O1.DELIVERY_DATE,'%M') MONTH,SUM(P1.PRICE)
FROM ORDERS O1 INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY MONTH;

======================================================================
OUTER JOINS
===========
Outer Joins are used to obtain the matched and unmatched records from the tables.

Outer Joins are of 3 types:
-> LEFT Outer Joins
-> RIGHT Outer Joins
-> FULL Outer Joins

---------------------------------------------------------------------
LEFT Outer Joins
================
Left Outer Joins are used to obtain the matched and unmatched records from the LEFT table.

Syntax:
------
SELECT col-name
FROM table-1 LEFT OUTER JOIN table-2
ON table-1.col-name=table-2.col-name;

----------------------------------------------------------------------
RIGHT Outer Joins
=================
Right Outer Joins are used to obtain the matched and unmatched records from the RIGHT table.

Syntax:
------
SELECT col-name
FROM table-1 RIGHT OUTER JOIN table-2
ON table-1.col-name=table-2.col-name;

----------------------------------------------------------------------
FULL Outer Joins
================
Full Outer Joins are used to obtain the matched and unmatched records from BOTH the table.

Syntax:
------
SELECT col-name
FROM table-1 LEFT OUTER JOIN table-2
ON table-1.col-name=table-2.col-name
UNION
SELECT col-name
FROM table-1 RIGHT OUTER JOIN table-2
ON table-1.col-name=table-2.col-name;

---------------------------------------------------------------------- 
    A            B          o/p
 ================================
 EMP   NAME   EMP   NAME     EMP
 ----------   ----------     ---
 101     A    101    A       106
 102     B    103    C       107
 103     C    105    E
 104     D    106    X
 105     E    107    Y

215.  
















